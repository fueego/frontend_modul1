@import 'mixins';
@import 'grid';
@import 'animation';

@import url('https://fonts.googleapis.com/css?family=Lato:400,700');

//Variables
$lightBlue: #2a68cc;
$darkBlue: #204f9b;
$fontColor: #969696;
$lightColor: #fff;
$darkColor: #666;
$lightGrayColor: #dedede;
$dangerColor: orangered;
$footerBgLightColor: #083072;
$footerBgDarkColor: #0a1f42;

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

//16px to defaultowa wartosc font-size, ustawiana przez przeglądarki
//W celu latwiejszych obliczen zmienimy czcionke na 10px co da nam 1rem = 10px
html {
    //font-size: 10px; - ustawienie na sztywno wartosci 10px w html, wytnie w pien, mozliwosc zmiany defaultowej wielkosci czcionki dla przegladarki
    //zamiast tego zastosujemy procenty ;), 
    font-size: 62.5%; //dalej jednak chcemy latwo obliczac 1rem, powinien dawac 10px, zatem 10 px z 16 to 62,5%

    @include respond2(bigScreen) {
        font-size: 75%;// 1 rem = 12px --> 12/16 * 100 = 75%
    }

    @include respond2(tabLand) {
        font-size: 56.25%; // 1 rem = 9px --> 9/16 * 100 = 56.25%
    }

    @include respond2(tabPort) {
        font-size: 50%; // 1 rem = 8px --> 8/16 * 100 = 50%
    }

    @include respond2(phone) {
        font-size: 43.75%;// 1rem = 7px --> 7/16 * 100 = 
    }

}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 3rem;
    color: $fontColor;
}

header.main-header {
    height: 85vh; //vh to jednostka "view-height" obliczana na podstawie wolnego miejsca na wyswietlaczu
    width: 100%;
    background-image: linear-gradient(
        to right bottom,
        rgba($lightBlue, .6),
        rgba($darkBlue, 1)
    ), url(../img/header_bg.jpg);
    background-size: cover;
    background-position: center;
    clip-path: polygon(0 0, 100% 0, 100% 70%, 0 100%);
    position: relative;

    .main-header__logo {
        position: relative;
        
        img {
            height: 10rem;
            position: absolute;
            top: 2.5rem;
            left: 2.5rem;
            opacity: .9;
        }
    }

    .main-header__text {

        position: absolute;
        -webkit-transform: translate(-50%,-50%);
        transform: translate(-50%,-50%);
        top: 40%;
        left: 50%;
        
        color: $lightColor;
        text-transform: uppercase;

        .main-header__text--title {
            font-size: 5rem;
            font-weight: 700;
            letter-spacing: 2rem;
            line-height: 7rem;
            white-space: nowrap;
        }

        .main-header__text--subtitle {
            font-size: 2rem;
            font-weight: 400;
            letter-spacing: .95rem;
            white-space: nowrap;
        }
    }
}

.main-content {
    .folio {
        .title {
            padding: 4rem;
            width: 100%;
            
            h2 {
                text-align: center;
            }
        }

        .folio__text p{
            position: relative;
            display: block;
    
            &:not(:last-child)::after {
                content: "";
                position: absolute;
                bottom: .2rem;
                left: 10%;
                height: .1rem;
                width: 80%;
                border-bottom: 1px solid $lightGrayColor;
            }
        }
    
        .folio__gall {
            img.folio__gall--img {
                @include roundedCorners(.6rem);
                width: 25rem;
                transition: all .2s;
                opacity: .7;
                box-shadow: 0 .2rem .5rem rgba(0,0,0, .5);
    
                &:hover {
                    opacity: 1;
                    transform: scale(1.05);
                    box-shadow: 0 .2rem 2rem rgba(0,0,0, .8);
                }
            }
        }

        .col-1-2 {
            @include respond2(tabLand) {
                width: 100%;
                padding: 0 20rem;
            }
        }

        .col-1-2 .folio__gall {
            @include respond2(tabLand) {
                .col-1-2 {
                    width: 45%;
                    padding: 5rem;
                }
            }

            @include respond2(tabPort) {
                .col-1-2 {
                    width: 100%;
                    padding: 2rem 0;
                    text-align: center;
                }
            }
        }
    }

    .offer {
        width: 100%;
        height: 100vh;
        background-image: linear-gradient(
            to right bottom,
            rgba($lightBlue, .6),
            rgba($darkBlue, 1)
        ), url(../img/middle_bg.jpg);
        background-size: cover;
        background-position: center;
        clip-path: polygon(0 0, 100% 30%, 100% 100%, 0 100%);
        position: relative;

        .title {
            padding: 28rem 0 6rem 0;
            width: 100%;
            
            h2 {
                color: $lightColor;
                text-align: center;
            }
        }

        .card {
            @include roundedCorners(.6rem);
            background-color: rgba($lightColor, .8);
            height: 30rem;
            overflow: hidden;
            position: relative;
            box-shadow: 0 .2rem 2rem rgba(0,0,0, .4);

            .card__title {
                @include roundedCorners(.3rem);
                position: absolute;
                top: 8rem;
                right: 2rem;
                background: $darkBlue;
                z-index: 2;
                padding: .6rem;
                color: $lightColor;
                background-image: linear-gradient(to right, $lightBlue, $darkBlue);
            }

            .card__header {
                background-size: cover;
                background-position: bottom;
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 85%);
                height: 10rem;

                &.header1 {
                    @include cardHeaderImg('../img/engine1_small.jpg');
                }

                &.header2 {
                    @include cardHeaderImg('../img/engine2_small.jpg');
                }

                &.header3 {
                    @include cardHeaderImg('../img/engine3_small.jpg');
                }
            }

            .card__main {
                color: $darkColor;
                margin-top: 2.2rem;
                text-align: center;

                ul > li {
                    position: relative;

                    &:not(:last-child) {
                        padding-bottom: 1.1rem;
                        
                        &::after {
                            content: '';
                            position: absolute;
                            bottom: .1rem;
                            width: 30%;
                            left: 50%;
                            transform: translateX(-50%);
                            border-bottom: 1px solid $fontColor;
                            opacity: .4;
                        }
                    }
                }
            }
        }

        @include respond2(bigScreen) {
            .title {
                padding: 26rem 0 6rem 0;
            }
        }

        @include respond2(tabLand) {
            .title {
                padding: 33rem 0 6rem 0;
            }
        }

        @include respond2(tabPort) {
            .title {
                padding: 30rem 0 6rem 0;
            }

            .col-1-3 {
                width: 33%;
                margin: 2rem auto;
            }
        }

        @include respond2(phone) {
            
            text-align: center;

            .col-1-3 {
                width: 50%;
                margin: 2rem auto;
                float: none;
            }
            
            .card {
                height: 22rem;

                .card__title {
                    top: 15rem;
                }
            }

            .card__header {
                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 35%);
                height: 18rem !important;
            }

            .card__main {
                ul {
                    display: none;
                }
            }
        }

    }

    .bio {
        width: 100%;
        margin: 11rem 0;
        text-align: center;

        .title {
            padding: 4rem 0;
        }

        .bio__content {
            width: 60%;
            margin: 0 auto;
            //pochylenie, czemu nie ;)
            transform: skewX(-4deg);
            
            & > div {
                box-shadow: 0 2rem 9rem rgba(0,0,0, .2);
                padding: 3rem;

                &:not(:last-child) {
                    margin-bottom: 8rem;
                }

                .bio__content--img {
                    width: 15rem;
                    height: 15rem;
                    float: left;

                    //dzięki tej metodzie nadamy kształt, do opływania tekstu (pierwszy parametr radious, kolejne parametry ustawiają nam srodek kola )
                    //parametr ten będzie działał tylko, jeżeli pudełko ma zdefiniowane wymiary oraz floating
                    -webkit-shape-outside: circle(50% at 50% 50%);
                    shape-outside: circle(50% at 50% 50%);
                    //nadamy kształt koła do naszego elementu
                    -webkit-clip-path: circle(50% at 50% 50%);
                    clip-path: circle(50% at 50% 50%);
                    //dla elementów do, których zastosowalismy float najlepiej wypozycjonowac je za pomocą transform
                    transform: translateX(-9%) translateY(5%) skewX(4deg);
                    position: relative;

                    figcaption {
                        position: absolute;
                        top: 50%;
                        left:50%;
                        transform: translateX(-50%) translateY(20%);
                        color: $lightColor;
                        text-transform: uppercase;
                        font-weight: 700;
                        text-align: center;
                        opacity: 0;
                        transition: all .5s;
                        //backface-visibility - poprawia wszelkie niedoskonałosci podczas animacji, jak blur, jak trzęsienie podczas liniowego ruchu etc.
                        backface-visibility: hidden;
                    }

                    img {
                        width: 20rem;
                        //ustawiamy poczatkowa wartosc scale na ciut wieksza, tak aby pozniej miec fajny efekt zoomowania
                        transform: scale(1.4) translateX(-20px);;
                        transition: all .3s;
                    }
                }

                .bio__content--text {
                    text-align: left;

                    p {
                        padding: 2rem 1.5rem 2rem 0;
                    }
                }
            
                //po najechaniu na element, .bio__content wskazujemy akcję dla figure.figcaption znajdującą się wewnątrz elementu bio__content
                &:hover figure figcaption {
                    opacity: 1;
                    transform: translateX(-50%) translateY(-50%) skewX(4deg);
                }

                //animacja obrazka wewnatrz elementu figure
                &:hover figure > img {
                    transform: scale(1);
                    //css niesie ze soba ciekawe wbudowane efekty / filtry np
                    filter: blur(3px) brightness(80%);
                }
            }
        }
    }

    .formContainer {
        width: 100%;
        padding: 10rem 0;
        background-image: linear-gradient(
            to right bottom,
            rgba($lightBlue, .9),
            rgba($darkBlue, .9));

        &--title {
            padding: 0 0 2rem 0;
            color: $lightColor;
            text-align: center;
        }

        &--content {
            @include roundedCorners(.3rem);
            width: 60%;
            margin: 0 auto;
            background-image: linear-gradient(
                to right bottom,    
                rgba($lightBlue, .4),
                rgba($darkBlue, .2)),
                url(../img/form_bg.jpg);
            background-size: cover;
            background-position: center;
            overflow: hidden;
            box-shadow: 0 2rem 9rem rgba(0,0,0, .2);
        }

        .form {
            padding: 2rem;
            background-color: $lightColor;
            clip-path: polygon(0 0, 60% 0, 50% 100%, 0 100%);
            opacity: .9;

            form {
                width: 50%;
            }

            &__group:not(:last-child) {
                margin-bottom: 2rem;
            }

            &__input {
                // co istotne, elementy formularzy typu input nie dizedziczą rodziny czcionek, więc musimy powiedzieć bezposrednio przegladarce,
                // skąd ma wziąc typ czcionki
                @include roundedCorners(.3rem);
                font-family: inherit;
                color: $darkColor;
                font-size: 1.5rem;
                padding: 1.5rem 2rem;
                border: 1px solid $lightGrayColor;
                opacity: 1;
                background-color: $lightColor;
                width: 100%;
                display: block;
                transition: all .3s;

                // usuwamy focus z zacznaczonego elementu
                &:focus {
                    outline: none;
                    border-bottom: 1px solid $lightBlue;
                    box-shadow: 0 .5rem 1.5rem rgba(0,0,0, .2);
                }

                // validacja przez kolory, jak zaznaczamy element to ma on swój focus, więc
                &:focus:invalid {
                    border-bottom: 1px solid $dangerColor;
                    box-shadow: 0 .5rem 1.5rem rgba(0,0,0, .2);
                }

                &::-webkit-input-placeholder {
                    color: darken($lightGrayColor, 20%);
                }
            }

            label {
                font-size: 1.2rem;
                font-weight: 700;
                margin-top: .7rem;
                display: block;
                transition: all .2s;
            }

            &__input:placeholder-shown + label {
                // samo opacity zostawia element na stronie www
                opacity: 0;
                // dodalismy visibility hidden w celu usunięcia elementu ale opacity musi być, bo visibility nie może być animowane
                visibility: hidden;
                transform: translateY(-4rem);
            }

            &__submit {
                text-align: center;

                a {
                    @include roundedCorners(.3rem);
                    position: relative;
                    transition: all .2s;
    
                    &:link,
                    &:visited {
                        color: $lightColor;
                        text-decoration: none;
                        padding: 1.2rem;
                        margin: 0px auto;
                        text-align: center;
                        display: inline-block;
                        background-image: linear-gradient(
                            to right bottom,    
                            rgba($lightBlue, .9),
                            rgba($darkBlue, .9)
                        );
                    }
    
                    &:hover {
                        transform: translateY(-2px);
                        box-shadow: 0 1rem 1.8rem rgba(0,0,0, .2);
                    }
    
                    &:hover::after {
                        transform: scale(1.1);
                        opacity: 0;
                    }
    
                    &:active {
                        transform: translateY(-1px);
                        box-shadow: 0 .8rem 1.6rem rgba(0,0,0, .3);
                    }
    
                    &::after {
                        @include roundedCorners(.3rem);
                        content: "";
                        position: absolute;
                        display: inline-block;
                        height: 100%;
                        width: 100%;
                        top: 0px;
                        left: 0px;
                        z-index: -1;
                        transition: all .6s;
                        background-image: linear-gradient(
                            to right bottom,    
                            rgba($lightBlue, .9),
                            rgba($darkBlue, .9)
                        );
                    }
                }
            }

            @include respond2(tabPort) {
                clip-path: unset;

                & > form {
                    width: 100%;
                }
            }
        }        
    }
}

footer {
    .footer {
        padding: 4rem;
        width: 100%;
        background-image: linear-gradient(
            to right bottom,    
            rgba($footerBgLightColor, .8),
            rgba($footerBgDarkColor, .7)
        ), url(../img/footer_bg.jpg);
        background-size: cover;
        background-position: center;

        .footer__social {
            ul {
                text-align: center;

                li {
                    color: $lightColor;
                    list-style-type: none;
                    display: inline-block;
                    padding: 0 2rem;
                    
                    i {
                        transition: all .3s;
                        opacity: .6;
                        cursor: pointer;
                    }

                    i:hover {
                        opacity: .9;
                    }
                }
            }
        }

        .footer__copy {
            color: $lightColor;
            text-align: center;
            padding: 3rem 0 0;
        }
    }
}

.navigation {
    &__check {
        display: none;
    }

    &__check:checked ~ &__background {
        transform: scale(80);
    }

    &__check:checked ~ &__nav {
        opacity: 1;
        visibility: visible;
    }

    &__button {
        width: 8rem;
        height: 8rem;
        border-radius: 50%;
        background-color: $lightColor;
        position: fixed;
        top: 3rem;
        right: 3rem;
        z-index: 13;
        box-shadow: 0 .2rem 3rem rgba(0,0,0, .2);
        cursor: pointer;
    }

    &__background {
        width: 6rem;
        height: 6rem;
        border-radius: 50%;
        position: fixed;
        top: 4rem;
        right: 4rem;
        // różnica pomiędzy linear-gradien to ta, że radial rozchodzi się koliscie
        background-image: radial-gradient($lightBlue, $darkBlue);
        z-index: 11;
        // po dodaniu cubic-bezire, jestesmy w stanie dać odpowiedniej szybkosci dla przebiegu animacji
        transition: all .5s cubic-bezier(.33,.48,.02,1.1);
    }

    &__nav {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        right: 0;

        z-index: 12;
        opacity: 0;
        visibility: hidden;
        transition: all .2s;
    }

    &__list {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        list-style: none;
        text-align: center;
    }

    &__item {
        padding: 2rem;
    }

    &__link {
        &:link,
        &:visited {
            font-size: 2.4rem;
            font-weight: normal;
            color: $lightColor;
            text-transform: uppercase;
            text-decoration: none;
            letter-spacing: .3rem;
            padding: .8rem 1.6rem;
            background-image: linear-gradient(90deg, transparent 0%, transparent 50%, $lightColor 50%);
            background-size: 203%;
            transition: all .3s;
        }

        &:hover,
        &:active {
            background-position: 100%;
            color: $footerBgDarkColor;
        }
    }

    span.hamburger-icon {
        background-color: $darkBlue;
        width: 3.5rem;
        height: .25rem;
        z-index: 20;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);

        &::before {
            content: '';
            background-color: inherit;
            width: inherit;
            height: inherit;
            position: absolute;
            top: -.8rem;
            transition: all .1s;
        }

        &::after {
            content: '';
            background-color: inherit;
            width: inherit;
            height: inherit;
            position: absolute;
            top: .8rem;
            transition: all .1s;
        }
    }

    &__check:checked ~ label span {
        background-color: transparent;
    }

    &__check:checked ~ label span::after,
    &__check:checked ~ label span::before {
        width: 3.5rem;
        top: 0;
    }

    &__check:checked ~ label span::after {
        background-color: $darkBlue;
        transform: rotate(45deg);
    }

    &__check:checked ~ label span::before {
        background-color: $darkBlue;
        transform: rotate(-45deg);
    }
}
